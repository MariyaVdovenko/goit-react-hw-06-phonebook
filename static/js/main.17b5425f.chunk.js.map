{"version":3,"sources":["App.module.css","localStorage.js","constants.js","App.jsx","index.js"],"names":["module","exports","saveToLocalStorage","key","value","console","log","localStorage","setItem","JSON","stringify","err","Error","getLocalStorage","items","getItem","parse","ADD_CONTACT","RENOVE_CONTACT","CONTACTS","contactsReducer","state","action","type","constants","payload","contact","filter","id","contactId","ReactDOM","render","useState","name","setName","number","setNumber","useReducer","storage","allContacts","contacts","dispatch","useEffect","setFilter","filtredContacts","useMemo","toLowerCase","includes","nameInputId","shortId","generate","numberInputId","className","styles","App","AppText","Form","onSubmit","e","preventDefault","undefined","find","NotificationManager","warning","htmlFor","Label","Label__text","Input","placeholder","onChange","target","pattern","Button","map","ContactListItem","onClick","document","getElementById"],"mappings":"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","file":"static/js/main.17b5425f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2luFh\",\"AppText\":\"App_AppText__3MYXi\",\"Label\":\"App_Label__3jBhN\",\"Label__text\":\"App_Label__text__169ap\",\"Input\":\"App_Input__3spDn\",\"Button\":\"App_Button__p7LHt\",\"ContactListItem\":\"App_ContactListItem__3DX6X\"};","export const saveToLocalStorage = (key, value) => {\r\n  try {\r\n    console.log('save', value);\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\nexport const getLocalStorage = key => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    console.log('get', items);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\n","export const ADD_CONTACT = 'addContact';\r\nexport const RENOVE_CONTACT = 'removeContact';\r\nexport const CONTACTS = 'contacts';\r\n","import React, { useState, useReducer, useMemo, useEffect } from 'react';\r\nimport styles from './App.module.css';\r\nimport shortId from 'shortid';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport allContacts from './contacts.json';\r\nimport * as storage from './localStorage';\r\nimport * as constants from './constants';\r\n\r\nconst contactsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case constants.ADD_CONTACT:\r\n      return [...state, action.payload.contact];\r\n    case constants.RENOVE_CONTACT:\r\n      return state.filter(contact => contact.id !== action.payload.contactId);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  //name & number\r\n  const [name, setName] = useState('');\r\n  const changeName = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const [number, setNumber] = useState('');\r\n  const changeNumber = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  //contacts\r\n\r\n  const [contacts, dispatch] = useReducer(\r\n    contactsReducer,\r\n    storage.getLocalStorage(constants.CONTACTS) || allContacts,\r\n  );\r\n  useEffect(() => {\r\n    storage.saveToLocalStorage(constants.CONTACTS, contacts);\r\n  }, [contacts]);\r\n\r\n  const addContacts = e => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    const isUnique = contacts.find(contact => {\r\n      return contact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (isUnique !== undefined) {\r\n      NotificationManager.warning(\r\n        `${name} already exist`,\r\n        'Try another name',\r\n        3000,\r\n      );\r\n      return;\r\n    } else if (!name) {\r\n      NotificationManager.warning(\r\n        `Enter contact name`,\r\n\r\n        3000,\r\n      );\r\n      return;\r\n    }\r\n    dispatch({ type: constants.ADD_CONTACT, payload: { contact } });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const removeContact = contactId => {\r\n    dispatch({ type: constants.RENOVE_CONTACT, payload: { contactId } });\r\n  };\r\n\r\n  //filter\r\n  const [filter, setFilter] = useState('');\r\n  const changeFilter = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const filtredContacts = useMemo(() => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  });\r\n\r\n  const nameInputId = shortId.generate();\r\n  const numberInputId = shortId.generate();\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <h1 className={styles.AppText}>Phonebook</h1>\r\n      <form className={styles.Form} onSubmit={addContacts}>\r\n        <label htmlFor={nameInputId} className={styles.Label}>\r\n          <span className={styles.Label__text}>Name</span>\r\n          <input\r\n            id={nameInputId}\r\n            className={styles.Input}\r\n            type=\"text\"\r\n            placeholder=\"Enter name (min 3 symb) \"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={changeName}\r\n            pattern=\"[A-Za-z]{3,}\"\r\n          />\r\n        </label>\r\n        <label htmlFor={numberInputId} className={styles.Label}>\r\n          <span className={styles.Label__text}>Number</span>\r\n\r\n          <input\r\n            id={numberInputId}\r\n            className={styles.Input}\r\n            type=\"number\"\r\n            placeholder=\"Enter number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={changeNumber}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.Button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n      <h2 className={styles.AppText}>Contacts</h2>\r\n      <section>\r\n        <input\r\n          className={styles.Input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={changeFilter}\r\n        />\r\n      </section>\r\n      <ul>\r\n        {filtredContacts &&\r\n          filtredContacts.map(contact => (\r\n            <li key={contact.id} className={styles.ContactListItem}>\r\n              <p className={styles.name}>\r\n                {contact.name}: {contact.number}\r\n              </p>\r\n              <button\r\n                className={styles.Button}\r\n                onClick={() => removeContact(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n\r\n      <NotificationContainer />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}