{"version":3,"sources":["App.module.css","App.jsx","index.js"],"names":["module","exports","contactsReduser","state","action","type","payload","contact","filter","id","contactId","ReactDOM","render","useState","name","setName","number","setNumber","useReducer","allContacts","contacts","dispatch","useEffect","window","localStorage","setItem","console","log","setFilter","filtredContacts","useMemo","toLowerCase","includes","className","styles","App","AppText","Form","onSubmit","e","preventDefault","shortId","generate","undefined","find","NotificationManager","warning","Label","Label__text","Input","placeholder","value","onChange","target","pattern","Button","map","key","ContactListItem","onClick","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,MAAQ,mBAAmB,YAAc,yBAAyB,MAAQ,mBAAmB,OAAS,oBAAoB,gBAAkB,+B,ueCS9MC,EAAkB,SAACC,EAAOC,GAC9B,OAAQA,EAAOC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,QAAQC,UACnC,IAAK,gBACH,OAAOJ,EAAMK,QAAO,SAAAD,GAAO,OAAIA,EAAQE,KAAOL,EAAOE,QAAQI,aAC/D,QACE,OAAOP,ICZbQ,IAASC,OAAO,mBDgBD,WAAe,MAEJC,mBAAS,IAFL,mBAErBC,EAFqB,KAEfC,EAFe,OAMAF,mBAAS,IANT,mBAMrBG,EANqB,KAMbC,EANa,OAaCC,qBAAWhB,EAAiBiB,GAb7B,mBAarBC,EAbqB,KAaXC,EAbW,KAe5BC,qBAAU,WACRC,OAAOC,aAAaC,QAAQ,WAAYL,MAE1CM,QAAQC,IAAIP,GAEZ,IApB4B,EA0DAP,mBAAS,IA1DT,mBA0DrBL,EA1DqB,KA0DboB,EA1Da,KA+DtBC,EAAkBC,mBAAQ,WAC9B,OAAOV,EAASZ,QAAO,SAAAD,GAAO,OAC5BA,EAAQO,KAAKiB,cAAcC,SAASxB,EAAOuB,qBAI/C,OACE,yBAAKE,UAAWC,IAAOC,KACrB,wBAAIF,UAAWC,IAAOE,SAAtB,aACA,0BAAMH,UAAWC,IAAOG,KAAMC,SApDd,SAAAC,GAClBA,EAAEC,iBAEF,IAAMjC,EAAU,CACdE,GAAIgC,IAAQC,WACZ5B,OACAE,eAMW2B,IAJAvB,EAASwB,MAAK,SAAArC,GACzB,OAAOA,EAAQO,KAAKiB,gBAAkBjB,EAAKiB,iBAWxCjB,GAQLO,EAAS,CAAEhB,KAAM,aAAcC,QAAS,CAAEC,aAC1CQ,EAAQ,IACRE,EAAU,KATR4B,sBAAoBC,QAApB,qBAGE,KAXFD,sBAAoBC,QAApB,UACKhC,EADL,kBAEE,mBACA,OAqCA,2BAAOmB,UAAWC,IAAOa,OACvB,0BAAMd,UAAWC,IAAOc,aAAxB,QACA,2BACEf,UAAWC,IAAOe,MAClB5C,KAAK,OACL6C,YAAY,2BACZC,MAAOrC,EACPA,KAAK,OACLsC,SA9ES,SAAAb,GACjBxB,EAAQwB,EAAEc,OAAOF,QA8ETG,QAAQ,iBAEV,2BACErB,UAAWC,IAAOe,MAClB5C,KAAK,SACL6C,YAAY,eACZpC,KAAK,SACLqC,MAAOnC,EACPoC,SAnFW,SAAAb,GACnBtB,EAAUsB,EAAEc,OAAOF,WAsFf,4BAAQlB,UAAWC,IAAOqB,OAAQlD,KAAK,UAAvC,gBAIF,wBAAI4B,UAAWC,IAAOE,SAAtB,YACA,iCACE,2BACEH,UAAWC,IAAOe,MAClB5C,KAAK,OACLS,KAAK,SACLqC,MAAO3C,EACP4C,SA9Ca,SAAAb,GACnBX,EAAUW,EAAEc,OAAOF,WAgDjB,4BACGtB,EAAgB2B,KAAI,SAAAjD,GAAO,OAC1B,wBAAIkD,IAAKlD,EAAQE,GAAIwB,UAAWC,IAAOwB,iBACrC,uBAAGzB,UAAWC,IAAOpB,MAClBP,EAAQO,KADX,KACmBP,EAAQS,QAE3B,4BACEiB,UAAWC,IAAOqB,OAClBI,QAAS,kBA/DCjD,EA+DmBH,EAAQE,QA9D/CY,EAAS,CAAEhB,KAAM,gBAAiBC,QAAS,CAAEI,eADzB,IAAAA,IA6DZ,eAUN,kBAAC,wBAAD,SC5IU,MAASkD,SAASC,eAAe,W","file":"static/js/main.fb9fb892.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2luFh\",\"AppText\":\"App_AppText__3MYXi\",\"Label\":\"App_Label__3jBhN\",\"Label__text\":\"App_Label__text__169ap\",\"Input\":\"App_Input__3spDn\",\"Button\":\"App_Button__p7LHt\",\"ContactListItem\":\"App_ContactListItem__3DX6X\"};","import React, { useState, useReducer, useMemo, useEffect } from 'react';\r\nimport styles from './App.module.css';\r\nimport shortId from 'shortid';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport allContacts from './contacts.json';\r\n\r\nconst contactsReduser = (state, action) => {\r\n  switch (action.type) {\r\n    case 'addContact':\r\n      return [...state, action.payload.contact];\r\n    case 'removeContact':\r\n      return state.filter(contact => contact.id !== action.payload.contactId);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  //name & number\r\n  const [name, setName] = useState('');\r\n  const changeName = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const [number, setNumber] = useState('');\r\n  const changeNumber = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  //contacts\r\n  //const initialContact = window.localStorage.getItem('contacts') || allContacts;\r\n  const [contacts, dispatch] = useReducer(contactsReduser, allContacts);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem('contacts', contacts);\r\n  });\r\n  console.log(contacts);\r\n\r\n  const addContacts = e => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    const filr = contacts.find(contact => {\r\n      return contact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (filr !== undefined) {\r\n      NotificationManager.warning(\r\n        `${name} already exist`,\r\n        'Try another name',\r\n        3000,\r\n      );\r\n      return;\r\n    }\r\n    if (!name) {\r\n      NotificationManager.warning(\r\n        `Enter contact name`,\r\n\r\n        3000,\r\n      );\r\n      return;\r\n    }\r\n    dispatch({ type: 'addContact', payload: { contact } });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const removeContact = contactId => {\r\n    dispatch({ type: 'removeContact', payload: { contactId } });\r\n  };\r\n\r\n  //filter\r\n  const [filter, setFilter] = useState('');\r\n  const changeFilter = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const filtredContacts = useMemo(() => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <h1 className={styles.AppText}>Phonebook</h1>\r\n      <form className={styles.Form} onSubmit={addContacts}>\r\n        <label className={styles.Label}>\r\n          <span className={styles.Label__text}>Name</span>\r\n          <input\r\n            className={styles.Input}\r\n            type=\"text\"\r\n            placeholder=\"Enter name (min 3 symb) \"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={changeName}\r\n            pattern=\"[A-Za-z]{3,}\"\r\n          />\r\n          <input\r\n            className={styles.Input}\r\n            type=\"number\"\r\n            placeholder=\"Enter number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={changeNumber}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.Button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n      <h2 className={styles.AppText}>Contacts</h2>\r\n      <section>\r\n        <input\r\n          className={styles.Input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={changeFilter}\r\n        />\r\n      </section>\r\n      <ul>\r\n        {filtredContacts.map(contact => (\r\n          <li key={contact.id} className={styles.ContactListItem}>\r\n            <p className={styles.name}>\r\n              {contact.name}: {contact.number}\r\n            </p>\r\n            <button\r\n              className={styles.Button}\r\n              onClick={() => removeContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <NotificationContainer />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}