{"version":3,"sources":["App.module.css","Components/ContactListItem/ContactListItem.module.css","Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactListItem/ContactListItem.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","App.jsx","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","NotificationManager","error","console","log","this","className","styles","Form","Label","Label__text","Input","type","placeholder","onChange","pattern","Button","Component","ContactListItem","contact","onDeleteContact","id","onClick","Filter","filter","ContactList","contacts","toLowerCase","indexOf","map","key","App","allContacts","filr","find","undefined","saveContact","warning","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","shortId","generate","addContact","AppText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b08f2ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2luFh\",\"AppText\":\"App_AppText__3MYXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListItem\":\"ContactListItem_ContactListItem__1_eDp\",\"Button\":\"ContactListItem_Button__32Tku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Filter_Input__2Zr0Z\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport T from 'prop-types';\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: T.func,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (!this.state.name) {\r\n      NotificationManager.error('Введите имя', 'Ошибка', 5000);\r\n\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n    this.setState({ number: '', name: '' });\r\n  };\r\n  render() {\r\n    console.log(this.state.name);\r\n    return (\r\n      <form className={styles.Form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.Label}>\r\n          <span className={styles.Label__text}>Name</span>\r\n          <input\r\n            className={styles.Input}\r\n            type=\"text\"\r\n            placeholder=\"Enter name (min 3 symb) \"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            onChange={this.handleChange}\r\n            pattern=\"[A-Za-z]{3,}\"\r\n          />\r\n          <input\r\n            className={styles.Input}\r\n            type=\"number\"\r\n            placeholder=\"Enter number\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.Button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './ContactListItem.module.css';\r\nimport T from 'prop-types';\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact }) => {\r\n  const { name, number, id } = contact;\r\n\r\n  return (\r\n    <li className={styles.ContactListItem}>\r\n      <p className={styles.name}>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={styles.Button} onClick={() => onDeleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: T.shape({\r\n    name: T.string,\r\n    number: T.string,\r\n  }),\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React, { Component } from 'react';\r\nimport styles from './Filter.module.css';\r\nimport T from 'prop-types';\r\n\r\nexport default class Filter extends Component {\r\n  static propTypes = {\r\n    handleChange: T.func,\r\n  };\r\n  render() {\r\n    return (\r\n      <section>\r\n        <input\r\n          className={styles.Input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={this.props.filter}\r\n          onChange={this.props.handleChange}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport Filter from '../Filter/Filter';\r\nimport T from 'prop-types';\r\n\r\nexport default class ContactList extends Component {\r\n  static propTypes = {\r\n    onDeleteContact: T.func,\r\n    contacts: T.arrayOf(\r\n      T.shape({\r\n        id: T.string.isRequired,\r\n        name: T.string,\r\n        number: T.string,\r\n      }),\r\n    ),\r\n  };\r\n  state = { filter: '' };\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Filter handleChange={this.handleChange} />\r\n        <ul>\r\n          {this.props.contacts\r\n            .filter(contact => {\r\n              return (\r\n                contact.name\r\n                  .toLowerCase()\r\n                  .indexOf(this.state.filter.toLowerCase()) >= 0\r\n              );\r\n            })\r\n            .map(contact => (\r\n              <ContactListItem\r\n                key={contact.id}\r\n                onDeleteContact={this.props.onDeleteContact}\r\n                contact={contact}\r\n              />\r\n            ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styles from './App.module.css';\r\nimport ContactForm from './Components/ContactForm/ContactForm';\r\n\r\nimport ContactList from './Components/ContactList/ContactList';\r\nimport shortId from 'shortid';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport allContacts from './contacts.json';\r\nimport T from 'prop-types';\r\n\r\n//Телефонная книга\r\n// Возьми свое решение задания из домашней работы 2 и добавь хранение контактов\r\n// телефонной книги в localStorage. Используй методы жизненного цикла.\r\n\r\n// При добавлении и удалении контакта, контакты сохраняются в локальное хранилище.\r\n// При загрузке приложения, контакты, если таковые есть, считываются из локального\r\n// хранилища и записываются в состояние.\r\n\r\nexport default class App extends Component {\r\n  static propTypes = {\r\n    allContacts: T.arrayOf(\r\n      T.shape({\r\n        id: T.string.isRequired,\r\n        name: T.string,\r\n        number: T.string,\r\n      }),\r\n    ),\r\n  };\r\n\r\n  state = {\r\n    contacts: allContacts,\r\n  };\r\n\r\n  componentDidMount() {\r\n    try {\r\n      const contacts = localStorage.getItem('contacts');\r\n      if (contacts) {\r\n        const parsedContacts = JSON.parse(contacts);\r\n\r\n        this.setState({ contacts: parsedContacts });\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  onSubmit = (name, number) => {\r\n    const { contacts } = this.state;\r\n    const filr = contacts.find(contact => {\r\n      return contact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (filr !== undefined) {\r\n      NotificationManager.warning(\r\n        `${name} already exist`,\r\n        'Try another name',\r\n        3000,\r\n      );\r\n      return;\r\n    }\r\n    if (filr !== undefined) {\r\n      NotificationManager.warning(\r\n        `${name} already exist`,\r\n        'Try another name',\r\n        3000,\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.saveContact(name, number);\r\n  };\r\n\r\n  saveContact(name, number) {\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    this.addContact(contact);\r\n  }\r\n\r\n  addContact(contact) {\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, contact],\r\n    }));\r\n  }\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts } = this.state;\r\n    return (\r\n      <div className={styles.App}>\r\n        <h1 className={styles.AppText}>Phonebook</h1>\r\n        <ContactForm onSubmit={this.onSubmit} />\r\n        <h2 className={styles.AppText}>Contacts</h2>\r\n\r\n        <ContactList contacts={contacts} onDeleteContact={this.deleteContact} />\r\n        <NotificationContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"ContactForm_Label__2-85W\",\"Label__text\":\"ContactForm_Label__text__hMYoq\",\"Input\":\"ContactForm_Input__2qotX\",\"Button\":\"ContactForm_Button__1HBnX\"};"],"sourceRoot":""}