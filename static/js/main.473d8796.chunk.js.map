{"version":3,"sources":["App.module.css","App.jsx","index.js"],"names":["module","exports","contactsReduser","state","action","type","payload","contact","filter","id","contactId","ReactDOM","render","useState","name","setName","number","setNumber","useReducer","allContacts","contacts","dispatch","setFilter","filtredContacts","useMemo","toLowerCase","includes","className","styles","App","AppText","Form","onSubmit","shortId","generate","Label","Label__text","Input","placeholder","value","onChange","e","target","pattern","Button","map","key","ContactListItem","onClick","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,uB,weCM7CC,EAAkB,SAACC,EAAOC,GAC9B,OAAQA,EAAOC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,QAAQC,UACnC,IAAK,gBACH,OAAOJ,EAAMK,QAAO,SAAAD,GAAO,OAAIA,EAAQE,KAAOL,EAAOE,QAAQI,aAC/D,QACE,OAAOP,ICTbQ,IAASC,OAAO,mBDaD,WAAgB,IAAD,EACJC,mBAAS,IADL,mBACrBC,EADqB,KACfC,EADe,OAKAF,mBAAS,IALT,mBAKrBG,EALqB,KAKbC,EALa,OAUCC,qBAAWhB,EAAiBiB,GAV7B,mBAUrBC,EAVqB,KAUXC,EAVW,OAyBAR,mBAAS,IAzBT,mBAyBrBL,EAzBqB,KAyBbc,EAzBa,KA8BtBC,EAAkBC,mBAAQ,WAC9B,OAAOJ,EAASZ,QAAO,SAAAD,GAAO,OAC5BA,EAAQO,KAAKW,cAAcC,SAASlB,EAAOiB,qBAI/C,OACE,yBAAKE,UAAWC,IAAOC,KACrB,wBAAIF,UAAWC,IAAOE,SAAtB,aACA,0BAAMH,UAAWC,IAAOG,KAAMC,SA3Bd,SAAClB,EAAME,GACzB,IAAMT,EAAU,CACdE,GAAIwB,IAAQC,WACZpB,KAAMA,EACNE,OAAQA,GAEVK,EAAS,CAAEhB,KAAM,aAAcC,QAAS,CAAEC,eAsBtC,2BAAOoB,UAAWC,IAAOO,OACvB,0BAAMR,UAAWC,IAAOQ,aAAxB,QACA,2BACET,UAAWC,IAAOS,MAClBhC,KAAK,OACLiC,YAAY,2BACZC,MAAOzB,EACPA,KAAK,OACL0B,SA9CS,SAAAC,GACjB1B,EAAQ0B,EAAEC,OAAOH,QA8CTI,QAAQ,iBAEV,2BACEhB,UAAWC,IAAOS,MAClBhC,KAAK,SACLiC,YAAY,eACZxB,KAAK,SACLyB,MAAOvB,EACPwB,SAnDW,SAAAC,GACnBxB,EAAUwB,EAAEC,OAAOH,WAsDf,4BAAQZ,UAAWC,IAAOgB,OAAQvC,KAAK,UAAvC,gBAKF,wBAAIsB,UAAWC,IAAOE,SAAtB,YACA,iCACE,2BACEH,UAAWC,IAAOS,MAClBhC,KAAK,OACLS,KAAK,SACLyB,MAAO/B,EACPgC,SA/Ca,SAAAC,GACnBnB,EAAUmB,EAAEC,OAAOH,WAkDjB,4BACGhB,EAAgBsB,KAAI,SAAAtC,GAAO,OAC1B,wBAAIuC,IAAKvC,EAAQE,GAAIkB,UAAWC,IAAOmB,iBACrC,uBAAGpB,UAAWC,IAAOd,MAClBP,EAAQO,KADX,KACmBP,EAAQS,QAE3B,4BACEW,UAAWC,IAAOgB,OAClBI,QAAS,kBAhECtC,EAgEmBH,EAAQE,QA/D/CY,EAAS,CAAEhB,KAAM,gBAAiBC,QAAS,CAAEI,eADzB,IAAAA,IA8DZ,eAUN,kBAAC,wBAAD,SC1GU,MAASuC,SAASC,eAAe,W","file":"static/js/main.473d8796.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2luFh\",\"AppText\":\"App_AppText__3MYXi\"};","import React, { useState, useReducer, useMemo } from 'react';\r\nimport styles from './App.module.css';\r\nimport shortId from 'shortid';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport allContacts from './contacts.json';\r\n\r\nconst contactsReduser = (state, action) => {\r\n  switch (action.type) {\r\n    case 'addContact':\r\n      return [...state, action.payload.contact];\r\n    case 'removeContact':\r\n      return state.filter(contact => contact.id !== action.payload.contactId);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  const [name, setName] = useState('');\r\n  const changeName = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const [number, setNumber] = useState('');\r\n  const changeNumber = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const [contacts, dispatch] = useReducer(contactsReduser, allContacts);\r\n\r\n  const addContacts = (name, number) => {\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    dispatch({ type: 'addContact', payload: { contact } });\r\n  };\r\n\r\n  const removeContact = contactId => {\r\n    dispatch({ type: 'removeContact', payload: { contactId } });\r\n  };\r\n\r\n  const [filter, setFilter] = useState('');\r\n  const changeFilter = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const filtredContacts = useMemo(() => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <h1 className={styles.AppText}>Phonebook</h1>\r\n      <form className={styles.Form} onSubmit={addContacts}>\r\n        <label className={styles.Label}>\r\n          <span className={styles.Label__text}>Name</span>\r\n          <input\r\n            className={styles.Input}\r\n            type=\"text\"\r\n            placeholder=\"Enter name (min 3 symb) \"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={changeName}\r\n            pattern=\"[A-Za-z]{3,}\"\r\n          />\r\n          <input\r\n            className={styles.Input}\r\n            type=\"number\"\r\n            placeholder=\"Enter number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={changeNumber}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.Button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n\r\n      <h2 className={styles.AppText}>Contacts</h2>\r\n      <section>\r\n        <input\r\n          className={styles.Input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={changeFilter}\r\n        />\r\n      </section>\r\n\r\n      <ul>\r\n        {filtredContacts.map(contact => (\r\n          <li key={contact.id} className={styles.ContactListItem}>\r\n            <p className={styles.name}>\r\n              {contact.name}: {contact.number}\r\n            </p>\r\n            <button\r\n              className={styles.Button}\r\n              onClick={() => removeContact(contact.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <NotificationContainer />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}