{"version":3,"sources":["App.module.css","localStorage.js","App.jsx","index.js"],"names":["module","exports","saveToLocalStorage","key","value","console","log","localStorage","setItem","JSON","stringify","err","getLocalStorage","items","getItem","parse","contactsReducer","state","action","type","payload","contact","filter","id","contactId","ReactDOM","render","useState","name","setName","number","setNumber","useReducer","storage","allContacts","contacts","dispatch","useEffect","setFilter","filtredContacts","useMemo","toLowerCase","includes","className","styles","App","AppText","Form","onSubmit","e","preventDefault","shortId","generate","undefined","find","NotificationManager","warning","Label","Label__text","Input","placeholder","onChange","target","pattern","Button","map","ContactListItem","onClick","document","getElementById"],"mappings":"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","file":"static/js/main.029460eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2luFh\",\"AppText\":\"App_AppText__3MYXi\",\"Label\":\"App_Label__3jBhN\",\"Label__text\":\"App_Label__text__169ap\",\"Input\":\"App_Input__3spDn\",\"Button\":\"App_Button__p7LHt\",\"ContactListItem\":\"App_ContactListItem__3DX6X\"};","export const saveToLocalStorage = (key, value) => {\r\n  try {\r\n    console.log('save', value);\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    console.log(err);\r\n    //throw new Error();\r\n  }\r\n};\r\nexport const getLocalStorage = key => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    console.log('get', items);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    console.log(err);\r\n    //throw new Error();\r\n  }\r\n};\r\n","import React, { useState, useReducer, useMemo, useEffect } from 'react';\r\nimport styles from './App.module.css';\r\nimport shortId from 'shortid';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport allContacts from './contacts.json';\r\nimport * as storage from './localStorage';\r\n\r\nconst contactsReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'addContact':\r\n      return [...state, action.payload.contact];\r\n    case 'removeContact':\r\n      return state.filter(contact => contact.id !== action.payload.contactId);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function App() {\r\n  //name & number\r\n  const [name, setName] = useState('');\r\n  const changeName = e => {\r\n    setName(e.target.value);\r\n  };\r\n  const [number, setNumber] = useState('');\r\n  const changeNumber = e => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  //contacts\r\n\r\n  const [contacts, dispatch] = useReducer(\r\n    contactsReducer,\r\n    storage.getLocalStorage('contacts') || allContacts,\r\n  );\r\n  useEffect(() => {\r\n    storage.saveToLocalStorage('contacts', contacts);\r\n  }, [contacts]);\r\n\r\n  const addContacts = e => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    const filr = contacts.find(contact => {\r\n      return contact.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n\r\n    if (filr !== undefined) {\r\n      NotificationManager.warning(\r\n        `${name} already exist`,\r\n        'Try another name',\r\n        3000,\r\n      );\r\n      return;\r\n    }\r\n    if (!name) {\r\n      NotificationManager.warning(\r\n        `Enter contact name`,\r\n\r\n        3000,\r\n      );\r\n      return;\r\n    }\r\n    dispatch({ type: 'addContact', payload: { contact } });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const removeContact = contactId => {\r\n    dispatch({ type: 'removeContact', payload: { contactId } });\r\n  };\r\n\r\n  //filter\r\n  const [filter, setFilter] = useState('');\r\n  const changeFilter = e => {\r\n    setFilter(e.target.value);\r\n  };\r\n\r\n  const filtredContacts = useMemo(() => {\r\n    return contacts.filter(contact => {\r\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className={styles.App}>\r\n      <h1 className={styles.AppText}>Phonebook</h1>\r\n      <form className={styles.Form} onSubmit={addContacts}>\r\n        <label className={styles.Label}>\r\n          <span className={styles.Label__text}>Name</span>\r\n          <input\r\n            className={styles.Input}\r\n            type=\"text\"\r\n            placeholder=\"Enter name (min 3 symb) \"\r\n            value={name}\r\n            name=\"name\"\r\n            onChange={changeName}\r\n            pattern=\"[A-Za-z]{3,}\"\r\n          />\r\n          <input\r\n            className={styles.Input}\r\n            type=\"number\"\r\n            placeholder=\"Enter number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={changeNumber}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.Button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n      <h2 className={styles.AppText}>Contacts</h2>\r\n      <section>\r\n        <input\r\n          className={styles.Input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={changeFilter}\r\n        />\r\n      </section>\r\n      <ul>\r\n        {filtredContacts &&\r\n          filtredContacts.map(contact => (\r\n            <li key={contact.id} className={styles.ContactListItem}>\r\n              <p className={styles.name}>\r\n                {contact.name}: {contact.number}\r\n              </p>\r\n              <button\r\n                className={styles.Button}\r\n                onClick={() => removeContact(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n\r\n      <NotificationContainer />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}